{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","components/ApiKey.js","App.js","components/Formulario2.js","App2.js","components/Formulario3.js","components/Clima3.js","App3.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","humidity","temp_min","App","componente","consultar","guardarResultado","useEffect","a","appId","ApiKey","url","fetch","respuesta","json","console","log","cod","consultarAPI","Formulario2","latitud","longitud","placeholder","App2","Formulario3","Clima3","city","list","slice","map","res","dt_txt","weather","description","App3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f2a0693.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Header = ({ titulo }) => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper indigo darken-5\">\n        <a href=\"#!\" className=\"brand-logo\">\n          {titulo}\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Error = ({ mensaje }) => {\n  return <p className=\"red darken-5 error\">{mensaje}</p>;\n};\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { Error } from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nexport const Formulario = ({ busqueda, guardarBusqueda, guardarConsultar }) => {\n  const [error, guardarError] = useState(false);\n\n  // extraer ciudad y pais\n  const { ciudad, pais } = busqueda;\n\n  // función que coloca los elementos en el state\n  const handleChange = (e) => {\n    // actualizar el state\n    guardarBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Cuando el usuario da submit al formulario\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validar que no esté vacio\n    if (ciudad.trim() === \"\" || pais.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n\n    guardarError(false);\n\n    guardarConsultar(true);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null}\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"ciudad\"\n          id=\"ciudad\"\n          value={ciudad}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"ciudad\">Ciudad: </label>\n      </div>\n\n      <div className=\"input-field col s12\">\n        <select name=\"pais\" id=\"pais\" value={pais} onChange={handleChange}>\n          <option value=\"\"> Seleccione un país </option>\n          <option value=\"DE\">Alemania</option>\n          <option value=\"BE\">Belgica</option>\n          <option value=\"ES\">España</option>\n          <option value=\"FR\">Francia</option>\n          <option value=\"GB\">Gran Bretaña</option>\n          <option value=\"IT\">Italia</option>\n          <option value=\"CH\">Suiza</option>\n        </select>\n        <label htmlFor=\"pais\">País: </label>\n      </div>\n\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Buscar Clima\"\n          className=\"waves-effect waves-light btn-large btn-block yellow accent-4 input-field col s12\"\n        />\n      </div>\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  busqueda: PropTypes.object.isRequired,\n  guardarBusqueda: PropTypes.func.isRequired,\n  guardarConsultar: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Clima = ({ resultado }) => {\n  // extraer los valores\n  const { name, main } = resultado;\n\n  if (!name) return null;\n\n  // Grados kelvin\n  const kelvin = 273.15;\n\n  return (\n    <div className=\"card-panel white col s12\">\n      <div className=\"black-text\">\n        <h2>El clima en {name} es de: </h2>\n        <p className=\"temperatura\">\n          {parseFloat(main.temp - kelvin, 10).toFixed(2)}\n          {\" ºC \"}\n        </p>\n        <p>\n          Temperatura Máxima:\n          {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n        <p>Humedad: {main.humidity} %</p>\n        <p>\n          Temperatura Minima:\n          {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nClima.propTypes = {\n  resultado: PropTypes.object.isRequired,\n};\n","export default {\n  myKey: \"da1b2b293687420fea212e2b0350f9a4\",\n};\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Clima } from \"./components/Clima\";\nimport { Error } from \"./components/Error\";\nimport ApiKey from \"./components/ApiKey\";\n\nfunction App() {\n  // state del formulario\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: \"\",\n    pais: \"\",\n  });\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      if (consultar) {\n        const appId = ApiKey.myKey;\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n        // const url =\n        //   \"https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=Barcelona,ES&appid=da1b2b293687420fea212e2b0350f9a4\";\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        console.log(resultado);\n        console.log(respuesta);\n        console.log(resultado.cod);\n\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // Detecta si hubo resultados correctos en la consulta\n\n        if (resultado.cod === \"404\") {\n          guardarError(true);\n        } else {\n          guardarError(false);\n        }\n      }\n    };\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n\n  let componente;\n  if (error) {\n    componente = (\n      <Error mensaje=\"No hay resultados. No tenemos registrada una ciudad con ese nombre.\" />\n    );\n  } else {\n    componente = <Clima resultado={resultado} />;\n  }\n\n  return (\n    <Fragment>\n      <Header titulo=\"Previsión del tiempo, insertando Ciudad y País\" />\n\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">{componente}</div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { Error } from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nexport const Formulario2 = ({\n  busqueda,\n  guardarBusqueda,\n  guardarConsultar,\n}) => {\n  const [error, guardarError] = useState(false);\n\n  // extraer ciudad y pais\n  const { latitud, longitud } = busqueda;\n\n  // función que coloca los elementos en el state\n  const handleChange = (e) => {\n    // actualizar el state\n    guardarBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Cuando el usuario da submit al formulario\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validar que no esté vacio\n    if (latitud.trim() === \"\" || longitud.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n\n    guardarError(false);\n\n    guardarConsultar(true);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null}\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"latitud\"\n          id=\"latitud\"\n          value={latitud}\n          onChange={handleChange}\n          placeholder={\"41.520\"}\n        />\n        <label htmlFor=\"latitud\">Latitud: </label>\n      </div>\n      {/* const lat = \"41.52046563697905\";\n          const lon = \"2.1504215340059525\"; */}\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"longitud\"\n          id=\"longitud\"\n          value={longitud}\n          onChange={handleChange}\n          placeholder={\"2.15042\"}\n        />\n        <label htmlFor=\"longitud\">Longitud: </label>\n      </div>\n\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Buscar Clima\"\n          className=\"waves-effect waves-light btn-large btn-block yellow accent-4 input-field col s12\"\n        />\n      </div>\n    </form>\n  );\n};\n\nFormulario2.propTypes = {\n  busqueda: PropTypes.object.isRequired,\n  guardarBusqueda: PropTypes.func.isRequired,\n  guardarConsultar: PropTypes.func.isRequired,\n};\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Formulario2 } from \"./components/Formulario2\";\nimport { Clima } from \"./components/Clima\";\nimport { Error } from \"./components/Error\";\nimport ApiKey from \"./components/ApiKey\";\n\nfunction App2() {\n  // state del formulario\n  const [busqueda, guardarBusqueda] = useState({\n    latitud: \"\",\n    longitud: \"\",\n  });\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n\n  const { latitud, longitud } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      if (consultar) {\n        const appId = ApiKey.myKey;\n        // const lat = \"41.52046563697905\";\n        // const lon = \"2.1504215340059525\";\n        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitud}&lon=${longitud}&appid=${appId}`;\n\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        console.log(resultado);\n\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // Detecta si hubo resultados correctos en la consulta\n\n        if (resultado.cod === \"404\") {\n          guardarError(true);\n        } else {\n          guardarError(false);\n        }\n      }\n    };\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n\n  let componente;\n  if (error) {\n    componente = (\n      <Error mensaje=\"No hay resultados. No tenemos registrada una ciudad con ese nombre.\" />\n    );\n  } else {\n    componente = <Clima resultado={resultado} />;\n  }\n\n  return (\n    <Fragment>\n      <Header titulo=\"Previsión del tiempo, insertando Latitud y Longitud\" />\n\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario2\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">{componente}</div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App2;\n","import React, { useState } from \"react\";\nimport { Error } from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nexport const Formulario3 = ({\n  busqueda,\n  guardarBusqueda,\n  guardarConsultar,\n}) => {\n  const [error, guardarError] = useState(false);\n\n  // extraer ciudad y pais\n  const { id } = busqueda;\n\n  // función que coloca los elementos en el state\n  const handleChange = (e) => {\n    // actualizar el state\n    guardarBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Cuando el usuario da submit al formulario\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validar que no esté vacio\n    if (id.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n\n    guardarError(false);\n\n    guardarConsultar(true);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error ? <Error mensaje=\"El Id de la ciudad no es correcta\" /> : null}\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"id\"\n          id=\"id\"\n          value={id}\n          onChange={handleChange}\n          placeholder=\"Ex: Id Barcelona es  3128760\"\n        />\n        <label htmlFor=\"ciudad\">ID: </label>\n      </div>\n\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Buscar Clima\"\n          className=\"waves-effect waves-light btn-large btn-block yellow accent-4 input-field col s12\"\n        />\n      </div>\n    </form>\n  );\n};\n\nFormulario3.propTypes = {\n  busqueda: PropTypes.object.isRequired,\n  guardarBusqueda: PropTypes.func.isRequired,\n  guardarConsultar: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BiTime } from \"react-icons/bi\";\nimport { FaTemperatureLow } from \"react-icons/fa\";\nimport { WiHumidity } from \"react-icons/wi\";\nimport { TiWeatherCloudy } from \"react-icons/ti\";\n\nexport const Clima3 = ({ resultado }) => {\n  // extraer los valores\n  const { cod, city, list } = resultado;\n\n  if (!cod) return null;\n\n  // Grados kelvin\n  const kelvin = 273.15;\n\n  return (\n    <div className=\"card-panel white col s12\">\n      <div className=\"black-text\">\n        <h2>El clima en {city.name} es de: </h2>\n        <div>\n          {list.slice(0, 9).map((res) => (\n            <p key={res.dt_txt}>\n              <BiTime className=\"icon\" /> {res.dt_txt.slice(10, 16)} {\"h \"}\n              <FaTemperatureLow className=\"icon\" />\n              {parseFloat(res.main.temp - kelvin, 10).toFixed(2)}\n              {\" ºC \"}\n              <WiHumidity className=\"icon\" />\n              {res.main.humidity}\n              {\"% \"}\n              <TiWeatherCloudy className=\"icon\" />\n              {res.weather[0].description}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nClima3.propTypes = {\n  resultado: PropTypes.object.isRequired,\n};\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Formulario3 } from \"./components/Formulario3\";\nimport { Clima3 } from \"./components/Clima3\";\nimport { Error } from \"./components/Error\";\nimport ApiKey from \"./components/ApiKey\";\n\nfunction App3() {\n  // state del formulario\n  const [busqueda, guardarBusqueda] = useState({\n    id: \"\",\n  });\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n\n  const { id } = busqueda;\n\n  // Id de Barcelona = 3128760\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      if (consultar) {\n        const appId = ApiKey.myKey;\n        const url = `https://api.openweathermap.org/data/2.5/forecast?id=${id}&appid=${appId}`;\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        console.log(resultado);\n\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // Detecta si hubo resultados correctos en la consulta\n\n        if (resultado.cod === \"404\") {\n          guardarError(true);\n        } else {\n          guardarError(false);\n        }\n      }\n    };\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n\n  let componente;\n  if (error) {\n    componente = (\n      <Error mensaje=\"No hay resultados. No tenemos registrada una ciudad con ese id.\" />\n    );\n  } else {\n    componente = <Clima3 resultado={resultado} />;\n  }\n\n  return (\n    <Fragment>\n      <Header titulo=\"Previsión del tiempo de las próximas 24 horas, insertando ID Ciudad\" />\n\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario3\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">{componente}</div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App3;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport App2 from \"./App2\";\nimport App3 from \"./App3\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <App2 />\n    <App3 />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}